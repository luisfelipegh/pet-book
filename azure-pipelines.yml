trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: CmdLine@2
  displayName: 'NPM Install'
  inputs:
    script: |
      npm i -g @angular/cli
      npm i
      ng build --prod
- task: CmdLine@2
  displayName: 'Run Unit Test'
  inputs:
    script: 'npm run test-ci'

- task: SonarCloudPrepare@1
  displayName: 'Prepare analysis on Sonar'
  inputs:
    SonarCloud: 'sonar-luisfelipegh'
    organization: 'luisfelipegh'
    scannerMode: 'CLI'
    configMode: 'file'

- task: SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: sonarcloud-buildbreaker@2
  inputs:
    SonarCloud: 'sonar-luisfelipegh'
    organization: 'luisfelipegh'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'dist/pet-book'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/pet-book-$(Build.BuildId).zip'
    replaceExistingArchive: true
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '$(Build.ArtifactStagingDirectory)/pet-book-$(Build.BuildId).zip'
    publishLocation: 'Container'

- task: S3Upload@1
  inputs:
    awsCredentials: 'aws-luisfelipegh'
    regionName: 'us-east-2'
    bucketName: 'pet-book-azure'
    sourceFolder: '$(Build.ArtifactStagingDirectory)'
    globExpressions: '*.zip'
    filesAcl: 'public-read-write'
    createBucket: true

- task: Docker@2
  inputs:
    containerRegistry: 'docker-luisfelipeg'
    repository: 'luisfelipeg/pet-book'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'